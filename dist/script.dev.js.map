{"version":3,"sources":["script.js"],"names":["require","config","express","axios","app","PORT","use","json","get","req","res","query","cuisine","lat","lng","status","error","params","q","format","lon","limit","addressdetails","response","data","length","restaurants","map","restaurant","name","display_name","address","link","console","listen","log"],"mappings":";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,KAAK,GAAGH,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMI,GAAG,GAAGF,OAAO,EAAnB;AACA,IAAMG,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQJ,OAAO,CAACK,IAAR,EAAR;AAEAH,GAAG,CAACI,GAAJ,CAAQ,iBAAR,EAA2B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBACOD,GAAG,CAACE,KADX,EACfC,OADe,cACfA,OADe,EACNC,GADM,cACNA,GADM,EACDC,GADC,cACDA,GADC;;AAAA,gBAGnB,CAACF,OAAD,IAAY,CAACC,GAAb,IAAoB,CAACC,GAHF;AAAA;AAAA;AAAA;;AAAA,2CAIZJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAAES,YAAAA,KAAK,EAAE;AAAT,WAArB,CAJY;;AAAA;AAAA;AAAA;AAAA,0CAQIb,KAAK,CAACK,GAAN,CAAU,4CAAV,EAAwD;AAC3ES,YAAAA,MAAM,EAAE;AACJC,cAAAA,CAAC,YAAKN,OAAL,gBADG;AAEJO,cAAAA,MAAM,EAAE,MAFJ;AAGJN,cAAAA,GAAG,EAAHA,GAHI;AAIJO,cAAAA,GAAG,EAAEN,GAJD;AAKJO,cAAAA,KAAK,EAAE,CALH;AAMJC,cAAAA,cAAc,EAAE;AANZ;AADmE,WAAxD,CARJ;;AAAA;AAQbC,UAAAA,QARa;;AAAA,gBAoBfA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CApBV;AAAA;AAAA;AAAA;;AAAA,2CAqBRf,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAAES,YAAAA,KAAK,EAAE;AAAT,WAArB,CArBQ;;AAAA;AAwBbU,UAAAA,WAxBa,GAwBCH,QAAQ,CAACC,IAAT,CAAcG,GAAd,CAAkB,UAAAC,UAAU;AAAA,mBAAK;AACjDC,cAAAA,IAAI,EAAED,UAAU,CAACE,YADgC;AAEjDC,cAAAA,OAAO,EAAEH,UAAU,CAACG,OAF6B;AAGjDlB,cAAAA,GAAG,EAAEe,UAAU,CAACf,GAHiC;AAIjDO,cAAAA,GAAG,EAAEQ,UAAU,CAACR,GAJiC;AAKjDY,cAAAA,IAAI,gDAAyCJ,UAAU,CAACf,GAApD,mBAAgEe,UAAU,CAACR,GAA3E,qBAAyFQ,UAAU,CAACf,GAApG,cAA2Ge,UAAU,CAACR,GAAtH;AAL6C,aAAL;AAAA,WAA5B,CAxBD;AAgCnBV,UAAAA,GAAG,CAACH,IAAJ,CAASmB,WAAT;AAhCmB;AAAA;;AAAA;AAAA;AAAA;AAmCnBO,UAAAA,OAAO,CAACjB,KAAR,CAAc,oBAAd;AACAN,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAAES,YAAAA,KAAK,EAAE;AAAT,WAArB;;AApCmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;AAwCAZ,GAAG,CAAC8B,MAAJ,CAAW7B,IAAX,EAAiB;AAAA,SAAM4B,OAAO,CAACE,GAAR,yHAAkD9B,IAAlD,EAAN;AAAA,CAAjB","sourcesContent":["require(\"dotenv\").config();\r\nconst express = require(\"express\");\r\nconst axios = require(\"axios\");\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\napp.use(express.json());\r\n\r\napp.get(\"/api/restaurant\", async (req, res) => {\r\n    const { cuisine, lat, lng } = req.query;\r\n\r\n    if (!cuisine || !lat || !lng) {\r\n        return res.status(400).json({ error: \"Необходимы параметры cuisine, lat и lng.\" });\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(\"https://nominatim.openstreetmap.org/search\", {\r\n            params: {\r\n                q: `${cuisine} restaurant`,\r\n                format: \"json\",\r\n                lat,\r\n                lon: lng,\r\n                limit: 5, \r\n                addressdetails: 1,\r\n            },\r\n        });\r\n\r\n       \r\n        if (response.data.length === 0) {\r\n            return res.status(404).json({ error: \"Рестораны не найдены.\" });\r\n        }\r\n\r\n        const restaurants = response.data.map(restaurant => ({\r\n            name: restaurant.display_name,\r\n            address: restaurant.address,\r\n            lat: restaurant.lat,\r\n            lon: restaurant.lon,\r\n            link: `https://www.openstreetmap.org/?mlat=${restaurant.lat}&mlon=${restaurant.lon}#map=16/${restaurant.lat}/${restaurant.lon}`,\r\n        }));\r\n\r\n        res.json(restaurants);\r\n\r\n    } catch (error) {\r\n        console.error(\"Ошибка при поиске:\", error);\r\n        res.status(500).json({ error: \"Ошибка сервера.\" });\r\n    }\r\n});\r\n\r\napp.listen(PORT, () => console.log(`Сервер запущен на http://localhost:${PORT}`));\r\n"],"file":"script.dev.js"}
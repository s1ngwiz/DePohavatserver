{"version":3,"sources":["script.js"],"names":["require","config","express","cors","app","axios","use","json","req","res","_req$query","cuisine","lat","lng","response","restaurants","regeneratorRuntime","async","_context","prev","next","query","abrupt","error","awrap","get","params","q","concat","format","lon","limit","addressdetails","sent","data","length","status","map","restaurant","name","display_name","address","t0","console","stop","listen","PORT"],"mappings":"aAAAA,QAAQ,UAAUC,SAClB,IAAMC,QAAUF,QAAQ,WADxBA,MAAQA,QAAUC,SAGZE,KAAOH,QAAQ,QAEfI,IAAMF,UAHNG,KAAQL,IACdI,IAAMD,IAAIA,QAMVC,IAAIE,IAAIJ,QAAQK,QAJhBH,IAAMA,IAAG,kBAAT,SAAAI,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAV,EACAF,EAAAa,MAAaV,EADbD,EACaC,QAAbC,EADAF,EACAE,IAAAC,EADAH,EACAG,IAQSF,GAAYC,GAAQC,EAT7B,CAAAK,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAI,OAAA,SAIeb,EAACF,OAAhB,KAAAA,KAAA,CAAAgB,MAAA,8CAJA,KAAA,EAAA,OAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAQ,MAM2BnB,MAAAoB,IAAA,6CAAA,CAAAC,OAAA,CAAAC,EAAA,GAAAC,OAAAjB,EAAA,eAAAkB,OAAA,OAAAjB,IAAAA,EAaXkB,IAAKjB,EAVbkB,MAACpB,EAHkBqB,eAAA,MAN3B,KAAA,EAAA,GAU6C,KAJlBlB,EAN3BI,EAAAe,MAU6CC,KAAAC,OAV7C,OAAAjB,EAAAI,OAAA,SAM2Bb,EAAA2B,OAAA,KAAA7B,KAAA,CAAAgB,MAAA,2BAN3BL,EAAAE,KAAA,EAAA,MAAA,KAAA,EAM2BL,EAAAD,EAAAoB,KAAAG,IAAA,SAAAC,GAAA,MAAA,CAAAC,KAAAD,EAAAE,aAAAC,QAAAH,EAAAG,QASff,IAAAA,EAAQd,IACJe,IAACW,EAAK3B,IACNkB,KAAAA,uCAAAA,OAFIS,EAAA1B,IAEJiB,UAAAA,OAFIS,EAAAR,IAEJD,YAAAA,OAFIS,EAAA1B,IAEJiB,KAAAA,OAFIS,EAAAR,QAKJC,EAAAA,KAAAA,GApBhBb,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,MAAA,GAcuFyB,QAR5DpB,MAAA,qBAQ4DL,EAAAwB,IA4B/EjC,EAAI2B,OAAO,KAAK7B,KAAK,CAAEgB,MAAO,oBA1CtC,KAAA,GAAA,IAAA,MAAA,OAAAL,EAAA0B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QAM2BxC,IAAAyC,OAAAC,KAoBfhC,WAAAA,OAAAA,QAAcqB,IAAdrB,sCAAAA,OApBegC","file":"script.min.js","sourcesContent":["require(\"dotenv\").config();\r\nconst express = require(\"express\");\r\nconst axios = require(\"axios\");\r\nconst cors = require(\"cors\"); // Импортируем CORS\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\napp.use(cors()); // Используем CORS\r\napp.use(express.json());\r\n\r\napp.get(\"/api/restaurant\", async (req, res) => {\r\n    const { cuisine, lat, lng } = req.query;\r\n\r\n    if (!cuisine || !lat || !lng) {\r\n        return res.status(400).json({ error: \"Необходимы параметры cuisine, lat и lng.\" });\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(\"https://nominatim.openstreetmap.org/search\", {\r\n            params: {\r\n                q: `${cuisine} restaurant`,\r\n                format: \"json\",\r\n                lat,\r\n                lon: lng,\r\n                limit: 5, \r\n                addressdetails: 1,\r\n            },\r\n        });\r\n\r\n       \r\n        if (response.data.length === 0) {\r\n            return res.status(404).json({ error: \"Рестораны не найдены.\" });\r\n        }\r\n\r\n        const restaurants = response.data.map(restaurant => ({\r\n            name: restaurant.display_name,\r\n            address: restaurant.address,\r\n            lat: restaurant.lat,\r\n            lon: restaurant.lon,\r\n            link: `https://www.openstreetmap.org/?mlat=${restaurant.lat}&mlon=${restaurant.lon}#map=16/${restaurant.lat}/${restaurant.lon}`,\r\n        }));\r\n\r\n        res.json(restaurants);\r\n\r\n    } catch (error) {\r\n        console.error(\"Ошибка при поиске:\", error);\r\n        res.status(500).json({ error: \"Ошибка сервера.\" });\r\n    }\r\n});\r\n\r\napp.listen(PORT, () => console.log(`Сервер запущен на http://localhost:${PORT}`));\r\n"]}
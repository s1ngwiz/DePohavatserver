{"version":3,"sources":["script.js"],"names":["require","config","express","PORT","app","use","json","req","res","_req$query","cuisine","lat","lng","response","restaurants","regeneratorRuntime","async","_context","prev","next","query","abrupt","status","error","awrap","axios","get","params","q","concat","format","lon","limit","addressdetails","sent","data","length","map","restaurant","address","t0","stop","listen","console","log"],"mappings":"aAAAA,QAAQ,UAAUC,SAClB,IAAMC,QAAUF,QAAQ,WADxBA,MAAQA,QAAUC,SACZC,IAAOA,UAIPC,KAAO,IAEbC,IAAIC,IAAIH,QAAQI,QAFhBF,IAAMD,IAAI,kBAAV,SAAAI,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAV,EAEAF,EAAAa,MAAQlB,EAFRO,EAEQP,QAAAS,EAFRF,EAEQE,IAARC,EAFAH,EAEAG,IAE2BF,GAAAC,GAAAC,EAJ3B,CAAAK,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAI,OAAA,SAQeb,EAAIc,OAAO,KAAKhB,KAAK,CAAEiB,MAAO,8CAR7C,KAAA,EAAA,OAAAN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAS,MAI2BC,MAAAC,IAAA,6CAAA,CAAAC,OAAA,CAUXC,EAAC,GAAAC,OAAKnB,EAAL,eAPToB,OAAA,OAHmBnB,IAAAA,EAAAoB,IAAAnB,EAAAoB,MAAA,EAeXC,eAAgB,MAnBhC,KAAA,EAAA,GAI2B,KAAApB,EAJ3BI,EAAAiB,MAI2BC,KAAAC,OAJ3B,OAAAnB,EAAAI,OAAA,SAI2Bb,EAAAc,OAAA,KAAAhB,KAAA,CAAAiB,MAAA,2BAJ3BN,EAAAE,KAAA,EAAA,MAAA,KAAA,EAaYQ,EAAQd,EAAAsB,KAAAE,IAAA,SAAAC,GAAA,MAAA,CACJV,KAACU,EAAK5B,aACNoB,QAAMQ,EAFFC,QAGJ5B,IAAG2B,EAHC3B,IAIJoB,IAAGO,EAJCP,IAKJC,KAAAA,uCAAAA,OALIM,EAAA3B,IAKJqB,UAAAA,OALIM,EAAAP,IAKJC,YAAAA,OALIM,EAAA3B,IAKJqB,KAAAA,OALIM,EAAAP,QADmEvB,EAR5DF,KAAAQ,GAJ3BG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAuB,GAAAvB,EAAA,MAAA,GAYcJ,QAAAA,MARa,qBAQbA,EAAAA,IA4BNL,EAAIc,OAAO,KAAKhB,KAAK,CAAEiB,MAAO,oBAxCtC,KAAA,GAAA,IAAA,MAAA,OAAAN,EAAAwB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QAI2BrC,IAAAsC,OAAAvC,KAAA,WAAA,OAAAwC,QAAAC,IAAA,sCAAAf,OAAA1B","file":"script.min.js","sourcesContent":["require(\"dotenv\").config();\r\nconst express = require(\"express\");\r\nconst axios = require(\"axios\");\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\napp.use(express.json());\r\n\r\napp.get(\"/api/restaurant\", async (req, res) => {\r\n    const { cuisine, lat, lng } = req.query;\r\n\r\n    if (!cuisine || !lat || !lng) {\r\n        return res.status(400).json({ error: \"Необходимы параметры cuisine, lat и lng.\" });\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(\"https://nominatim.openstreetmap.org/search\", {\r\n            params: {\r\n                q: `${cuisine} restaurant`,\r\n                format: \"json\",\r\n                lat,\r\n                lon: lng,\r\n                limit: 5, \r\n                addressdetails: 1,\r\n            },\r\n        });\r\n\r\n       \r\n        if (response.data.length === 0) {\r\n            return res.status(404).json({ error: \"Рестораны не найдены.\" });\r\n        }\r\n\r\n        const restaurants = response.data.map(restaurant => ({\r\n            name: restaurant.display_name,\r\n            address: restaurant.address,\r\n            lat: restaurant.lat,\r\n            lon: restaurant.lon,\r\n            link: `https://www.openstreetmap.org/?mlat=${restaurant.lat}&mlon=${restaurant.lon}#map=16/${restaurant.lat}/${restaurant.lon}`,\r\n        }));\r\n\r\n        res.json(restaurants);\r\n\r\n    } catch (error) {\r\n        console.error(\"Ошибка при поиске:\", error);\r\n        res.status(500).json({ error: \"Ошибка сервера.\" });\r\n    }\r\n});\r\n\r\napp.listen(PORT, () => console.log(`Сервер запущен на http://localhost:${PORT}`));\r\n"]}
{"version":3,"sources":["script.js"],"names":["require","config","express","cors","app","axios","use","json","PORT","req","res","cuisine","lat1","lat2","lon1","lon2","response","restaurants","regeneratorRuntime","async","_context","prev","next","query","abrupt","status","error","awrap","get","q","concat","addressdetails","limit","viewbox","bounded","sent","data","length","params","restaurant","display_name","format","lat","lon","t0","console","stop","listen","log"],"mappings":"aAAAA,QAAQ,UAAUC,SAClB,IAAMC,QAAUF,QAAQ,WADxBA,MAAQA,QAAUC,SAGZE,KAAOH,QAAQ,QAEfI,IAAMF,UAHNG,KAAQL,IACdI,IAAMD,IAAIA,QAMVC,IAAIE,IAAIJ,QAAQK,QAHhBH,IAAMI,IAAI,kBAAV,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAEYX,EAAZF,EAAAc,MAAYZ,QACJT,EAAQK,MAERM,EAAA,MAAmBC,EAAA,MAAAC,EAAA,MAAAJ,EAL3B,CAAAS,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAI,OAAA,SAK2Bd,EAAAe,OAAA,KAAAlB,KAAA,CAAAmB,MAAA,iCAL3B,KAAA,EAAA,OAAAN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAAAJ,mBAAAS,MAK2BtB,MAAAuB,IAAA,qCAAA,CAKjBb,OAAO,CASDc,EAAC,GAAAC,OAAKnB,EAAL,eAPRA,OAPkB,OAAAoB,eAAA,EAAAC,MAAA,EAAAC,QAAA,GAAAH,OAAAhB,EAAA,KAAAgB,OAAAlB,EAAA,KAAAkB,OAAAf,EAAA,KAAAe,OAAAjB,GAmBXqB,QAAS,MAxBzB,KAAA,GAAA,GA4BqC,KAvBVlB,EAL3BI,EAAAe,MA4BqBC,KAAKC,OA5B1B,OAAAjB,EAAAI,OAAA,SAK2Bd,EAAAe,OAAA,KAAAlB,KAAA,CAAAmB,MAAA,2BAL3BN,EAAAE,KAAA,GAAA,MAAA,KAAA,GAK2BL,EAAAD,EAAAoB,KAYI/B,IAAAA,SAAAA,GAAU,MAAA,CAC7BiC,KAAMC,EAAEC,aACJX,QAACU,EAAK5B,QACN8B,IAAAA,EAFIC,IAGJX,IAAAA,EAAcY,IACdX,KAAAA,uCAAAA,OAJIO,EAAAG,IAIJV,UAAAA,OAJIO,EAAAI,IAIJX,YAAAA,OAJIO,EAAAG,IAIJV,KAAAA,OAJIO,EAAAI,QAAAjC,EAAAH,KAAAU,GAlBpBG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAwB,GAAAxB,EAAA,MAAA,GAK2ByB,QAAAnB,MAAA,qBAAAN,EAAAwB,IAYb5B,EAAAA,OAZa,KAAAT,KAAA,CAAAmB,MAAA,oBAL3B,KAAA,GAAA,IAAA,MAAA,OAAAN,EAAA0B,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QAK2B1C,IAAA2C,OAAAvC,KAAA,WAAA,OAAAqC,QAAAG,IAAA,sCAAAlB,OAAAtB","file":"script.min.js","sourcesContent":["require(\"dotenv\").config();\r\nconst express = require(\"express\");\r\nconst axios = require(\"axios\");\r\nconst cors = require(\"cors\");\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\napp.get(\"/api/restaurant\", async (req, res) => {\r\n    const { cuisine } = req.query;\r\n    const lat1 = 54.55;\r\n    const lat2 = 54.75;\r\n    const lon1 = 25.15;\r\n    const lon2 = 25.45;\r\n\r\n    if (!cuisine) {\r\n        return res.status(400).json({ error: \"Необходим параметр cuisine.\" });\r\n    }\r\n\r\n    try {\r\n        const response = await axios.get(\"https://www.google.com/maps/search\", {\r\n            params: {\r\n                q: `${cuisine} restaurant`,\r\n                format: \"json\",\r\n                addressdetails: 1,\r\n                limit: 1,\r\n                viewbox: `${lon1},${lat1},${lon2},${lat2}`,\r\n                bounded: 1,\r\n            },\r\n        });\r\n\r\n        if (response.data.length === 0) {\r\n            return res.status(404).json({ error: \"Рестораны не найдены.\" });\r\n        }\r\n\r\n        const restaurants = response.data.map(restaurant => ({\r\n            name: restaurant.display_name,\r\n            address: restaurant.address,\r\n            lat: restaurant.lat,\r\n            lon: restaurant.lon,\r\n            link: `https://www.openstreetmap.org/?mlat=${restaurant.lat}&mlon=${restaurant.lon}#map=16/${restaurant.lat}/${restaurant.lon}`,\r\n        }));\r\n\r\n        res.json(restaurants);\r\n\r\n    } catch (error) {\r\n        console.error(\"Ошибка при поиске:\", error);\r\n        res.status(500).json({ error: \"Ошибка сервера.\" });\r\n    }\r\n});\r\n\r\napp.listen(PORT, () => console.log(`Сервер запущен на http://localhost:${PORT}`));\r\n"]}